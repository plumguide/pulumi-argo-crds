// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace argoproj {
    export namespace v1alpha1 {
        export interface ClusterWorkflowTemplateSpec {
            activeDeadlineSeconds?: number;
            affinity?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinity;
            arguments?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArguments;
            artifactRepositoryRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArtifactRepositoryRef;
            automountServiceAccountToken?: boolean;
            dnsConfig?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecDnsConfig;
            dnsPolicy?: string;
            entrypoint?: string;
            executor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecHostAliases[];
            hostNetwork?: boolean;
            imagePullSecrets?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecImagePullSecrets[];
            metrics?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecMetrics;
            nodeSelector?: {[key: string]: string};
            onExit?: string;
            parallelism?: number;
            podDisruptionBudget?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecPodDisruptionBudget;
            podGC?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecPodGC;
            podPriority?: number;
            podPriorityClassName?: string;
            podSpecPatch?: string;
            priority?: number;
            schedulerName?: string;
            securityContext?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecSecurityContext;
            serviceAccountName?: string;
            shutdown?: string;
            suspend?: boolean;
            synchronization?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecSynchronization;
            templates?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplates[];
            tolerations?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTolerations[];
            ttlSecondsAfterFinished?: number;
            ttlStrategy?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTtlStrategy;
            volumeClaimTemplates?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplates[];
            volumes?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumes[];
            workflowMetadata?: {[key: string]: any};
            workflowTemplateRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecWorkflowTemplateRef;
        }

        export interface ClusterWorkflowTemplateSpecAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAntiAffinity;
        }

        export interface ClusterWorkflowTemplateSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecArguments {
            artifacts?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsParameters[];
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsArchiveTar;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHttp {
            url: string;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsRaw {
            data: string;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecArgumentsParametersValueFrom;
        }

        export interface ClusterWorkflowTemplateSpecArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface ClusterWorkflowTemplateSpecArtifactRepositoryRef {
            configMap?: string;
            key?: string;
        }

        export interface ClusterWorkflowTemplateSpecDnsConfig {
            nameservers?: string[];
            options?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecDnsConfigOptions[];
            searches?: string[];
        }

        export interface ClusterWorkflowTemplateSpecDnsConfigOptions {
            name?: string;
            value?: string;
        }

        export interface ClusterWorkflowTemplateSpecExecutor {
            serviceAccountName?: string;
        }

        export interface ClusterWorkflowTemplateSpecHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface ClusterWorkflowTemplateSpecImagePullSecrets {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecMetrics {
            prometheus: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecMetricsPrometheus[];
        }

        export interface ClusterWorkflowTemplateSpecMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface ClusterWorkflowTemplateSpecMetricsPrometheusCounter {
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecPodDisruptionBudget {
            maxUnavailable?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecPodDisruptionBudgetMaxUnavailable;
            minAvailable?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecPodDisruptionBudgetMinAvailable;
            selector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecPodDisruptionBudgetSelector;
        }

        export interface ClusterWorkflowTemplateSpecPodDisruptionBudgetMaxUnavailable {
        }

        export interface ClusterWorkflowTemplateSpecPodDisruptionBudgetMinAvailable {
        }

        export interface ClusterWorkflowTemplateSpecPodDisruptionBudgetSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecPodGC {
            strategy?: string;
        }

        export interface ClusterWorkflowTemplateSpecSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecSecurityContextWindowsOptions;
        }

        export interface ClusterWorkflowTemplateSpecSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface ClusterWorkflowTemplateSpecSynchronization {
            mutex?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecSynchronizationSemaphore;
        }

        export interface ClusterWorkflowTemplateSpecSynchronizationMutex {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface ClusterWorkflowTemplateSpecSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplates {
            activeDeadlineSeconds?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesActiveDeadlineSeconds;
            affinity?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinity;
            archiveLocation?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocation;
            arguments?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArguments;
            automountServiceAccountToken?: boolean;
            container?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainer;
            daemon?: boolean;
            dag?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDag;
            executor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesHostAliases[];
            initContainers?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainers[];
            inputs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputs;
            memoize?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMemoize;
            metadata?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMetadata;
            metrics?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMetrics;
            name: string;
            nodeSelector?: {[key: string]: string};
            outputs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputs;
            parallelism?: number;
            podSpecPatch?: string;
            priority?: number;
            priorityClassName?: string;
            resource?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesResource;
            resubmitPendingPods?: boolean;
            retryStrategy?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesRetryStrategy;
            schedulerName?: string;
            script?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScript;
            securityContext?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSecurityContext;
            serviceAccountName?: string;
            sidecars?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecars[];
            steps?: any[][];
            suspend?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSuspend;
            synchronization?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSynchronization;
            template?: string;
            templateRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesTemplateRef;
            timeout?: string;
            tolerations?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesTolerations[];
            volumes?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumes[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesActiveDeadlineSeconds {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinity;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocation {
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactory;
            gcs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcs;
            git?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit;
            hdfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs;
            http?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationHttp;
            oss?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss;
            raw?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationRaw;
            s3?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHttp {
            url: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationRaw {
            data: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArguments {
            artifacts?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsParameters[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHttp {
            url: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsRaw {
            data: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainer {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnv[];
            envFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnvFrom[];
            image: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe;
            name?: string;
            ports?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerResources;
            securityContext?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts[];
            workingDir?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFrom;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnvFromSecretRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecycle {
            postStart?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStop;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerResourcesRequests};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerResourcesLimits {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerResourcesRequests {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerStartupProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDag {
            failFast?: boolean;
            target?: string;
            tasks: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasks[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasks {
            arguments?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArguments;
            continueOn?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksContinueOn;
            dependencies?: string[];
            depends?: string;
            name: string;
            onExit?: string;
            template: string;
            templateRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksTemplateRef;
            when?: string;
            withItems?: {[key: string]: any}[];
            withParam?: string;
            withSequence?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequence;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArguments {
            artifacts?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp {
            url: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw {
            data: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksContinueOn {
            error?: boolean;
            failed?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequence {
            count?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequenceCount;
            end?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequenceEnd;
            format?: string;
            start?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequenceStart;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequenceCount {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequenceEnd {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequenceStart {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesExecutor {
            serviceAccountName?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainers {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnv[];
            envFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersResources;
            securityContext?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecycle {
            postStart?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersResourcesRequests};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersResourcesLimits {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersResourcesRequests {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputs {
            artifacts?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsParameters[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3;
            subPath?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHttp {
            url: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsRaw {
            data: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMemoize {
            cache: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMemoizeCache;
            key: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMemoizeCache {
            configMap: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMemoizeCacheConfigMap;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMemoizeCacheConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMetrics {
            prometheus: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusCounter {
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputs {
            artifacts?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts[];
            exitCode?: string;
            parameters?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsParameters[];
            result?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3;
            subPath?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHttp {
            url: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsRaw {
            data: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesResource {
            action: string;
            failureCondition?: string;
            flags?: string[];
            manifest?: string;
            mergeStrategy?: string;
            setOwnerReference?: boolean;
            successCondition?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesRetryStrategy {
            backoff?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoff;
            limit?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesRetryStrategyLimit;
            retryPolicy?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoff {
            duration?: string;
            factor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoffFactor;
            maxDuration?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoffFactor {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesRetryStrategyLimit {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScript {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnv[];
            envFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnvFrom[];
            image: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe;
            name?: string;
            ports?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptResources;
            securityContext?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext;
            source: string;
            startupProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts[];
            workingDir?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFrom;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnvFromSecretRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecycle {
            postStart?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStop;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptResourcesRequests};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptResourcesLimits {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptResourcesRequests {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSecurityContextWindowsOptions;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecars {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnv[];
            envFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsResources;
            securityContext?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts[];
            workingDir?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecycle {
            postStart?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsResourcesRequests};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsResourcesLimits {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsResourcesRequests {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe {
            exec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeExec {
            command?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocketPort;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocketPort {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSuspend {
            duration?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSynchronization {
            mutex?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSynchronizationSemaphore;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSynchronizationMutex {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesVsphereVolume;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesCephfsSecretRef;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesCephfsSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesCinderSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPIItems[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesEmptyDirSizeLimit;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesEmptyDirSizeLimit {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesIscsiSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSources[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesRbdSecretRef;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesRbdSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecTemplatesVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesStorageosSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecTemplatesVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface ClusterWorkflowTemplateSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface ClusterWorkflowTemplateSpecTtlStrategy {
            secondsAfterCompletion?: number;
            secondsAfterFailure?: number;
            secondsAfterSuccess?: number;
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplates {
            apiVersion?: string;
            kind?: string;
            metadata?: {[key: string]: any};
            spec?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec;
            status?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatus;
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec {
            accessModes?: string[];
            dataSource?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource;
            resources?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResources;
            selector?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelector;
            storageClassName?: string;
            volumeMode?: string;
            volumeName?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource {
            apiGroup?: string;
            kind: string;
            name: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesRequests};
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesLimits {
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesRequests {
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatus {
            accessModes?: string[];
            capacity?: {[key: string]: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusCapacity};
            conditions?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions[];
            phase?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusCapacity {
        }

        export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions {
            lastProbeTime?: string;
            lastTransitionTime?: string;
            message?: string;
            reason?: string;
            status: string;
            type: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesVsphereVolume;
        }

        export interface ClusterWorkflowTemplateSpecVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesCephfsSecretRef;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesCephfsSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesCinderSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface ClusterWorkflowTemplateSpecVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesDownwardAPIItems[];
        }

        export interface ClusterWorkflowTemplateSpecVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface ClusterWorkflowTemplateSpecVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface ClusterWorkflowTemplateSpecVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesEmptyDirSizeLimit;
        }

        export interface ClusterWorkflowTemplateSpecVolumesEmptyDirSizeLimit {
        }

        export interface ClusterWorkflowTemplateSpecVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface ClusterWorkflowTemplateSpecVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesFlexVolumeSecretRef;
        }

        export interface ClusterWorkflowTemplateSpecVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesIscsiSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSources[];
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken;
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesRbdSecretRef;
            user?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesRbdSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.ClusterWorkflowTemplateSpecVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesStorageosSecretRef {
            name?: string;
        }

        export interface ClusterWorkflowTemplateSpecVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface ClusterWorkflowTemplateSpecWorkflowTemplateRef {
            clusterScope?: boolean;
            name?: string;
        }

        export interface CronWorkflowSpec {
            concurrencyPolicy?: string;
            failedJobsHistoryLimit?: number;
            schedule: string;
            startingDeadlineSeconds?: number;
            successfulJobsHistoryLimit?: number;
            suspend?: boolean;
            timezone?: string;
            workflowMetadata?: {[key: string]: any};
            workflowSpec: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpec;
        }

        export interface CronWorkflowSpecWorkflowSpec {
            activeDeadlineSeconds?: number;
            affinity?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinity;
            arguments?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArguments;
            artifactRepositoryRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArtifactRepositoryRef;
            automountServiceAccountToken?: boolean;
            dnsConfig?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecDnsConfig;
            dnsPolicy?: string;
            entrypoint?: string;
            executor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecHostAliases[];
            hostNetwork?: boolean;
            imagePullSecrets?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecImagePullSecrets[];
            metrics?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecMetrics;
            nodeSelector?: {[key: string]: string};
            onExit?: string;
            parallelism?: number;
            podDisruptionBudget?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecPodDisruptionBudget;
            podGC?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecPodGC;
            podPriority?: number;
            podPriorityClassName?: string;
            podSpecPatch?: string;
            priority?: number;
            schedulerName?: string;
            securityContext?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecSecurityContext;
            serviceAccountName?: string;
            shutdown?: string;
            suspend?: boolean;
            synchronization?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecSynchronization;
            templates?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplates[];
            tolerations?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTolerations[];
            ttlSecondsAfterFinished?: number;
            ttlStrategy?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTtlStrategy;
            volumeClaimTemplates?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplates[];
            volumes?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumes[];
            workflowTemplateRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecWorkflowTemplateRef;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecArguments {
            artifacts?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsParameters[];
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp {
            url: string;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw {
            data: string;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom;
        }

        export interface CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface CronWorkflowSpecWorkflowSpecArtifactRepositoryRef {
            configMap?: string;
            key?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecDnsConfig {
            nameservers?: string[];
            options?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecDnsConfigOptions[];
            searches?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecDnsConfigOptions {
            name?: string;
            value?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecExecutor {
            serviceAccountName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecImagePullSecrets {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecMetrics {
            prometheus: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecMetricsPrometheus[];
        }

        export interface CronWorkflowSpecWorkflowSpecMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter {
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudget {
            maxUnavailable?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMaxUnavailable;
            minAvailable?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMinAvailable;
            selector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector;
        }

        export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMaxUnavailable {
        }

        export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudgetMinAvailable {
        }

        export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecPodGC {
            strategy?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions;
        }

        export interface CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecSynchronization {
            mutex?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecSynchronizationSemaphore;
        }

        export interface CronWorkflowSpecWorkflowSpecSynchronizationMutex {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface CronWorkflowSpecWorkflowSpecSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplates {
            activeDeadlineSeconds?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesActiveDeadlineSeconds;
            affinity?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinity;
            archiveLocation?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation;
            arguments?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArguments;
            automountServiceAccountToken?: boolean;
            container?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainer;
            daemon?: boolean;
            dag?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDag;
            executor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesHostAliases[];
            initContainers?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainers[];
            inputs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputs;
            memoize?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMemoize;
            metadata?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMetadata;
            metrics?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMetrics;
            name: string;
            nodeSelector?: {[key: string]: string};
            outputs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputs;
            parallelism?: number;
            podSpecPatch?: string;
            priority?: number;
            priorityClassName?: string;
            resource?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesResource;
            resubmitPendingPods?: boolean;
            retryStrategy?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy;
            schedulerName?: string;
            script?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScript;
            securityContext?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSecurityContext;
            serviceAccountName?: string;
            sidecars?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecars[];
            steps?: any[][];
            suspend?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSuspend;
            synchronization?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSynchronization;
            template?: string;
            templateRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesTemplateRef;
            timeout?: string;
            tolerations?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesTolerations[];
            volumes?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumes[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesActiveDeadlineSeconds {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation {
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory;
            gcs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs;
            git?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit;
            hdfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs;
            http?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp;
            oss?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss;
            raw?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw;
            s3?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp {
            url: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw {
            data: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArguments {
            artifacts?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchiveTar;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHttp {
            url: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsRaw {
            data: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainer {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnv[];
            envFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom[];
            image: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe;
            name?: string;
            ports?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerResources;
            securityContext?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts[];
            workingDir?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle {
            postStart?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesRequests};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesLimits {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerResourcesRequests {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerStartupProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDag {
            failFast?: boolean;
            target?: string;
            tasks: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasks[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasks {
            arguments?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments;
            continueOn?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn;
            dependencies?: string[];
            depends?: string;
            name: string;
            onExit?: string;
            template: string;
            templateRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef;
            when?: string;
            withItems?: {[key: string]: any}[];
            withParam?: string;
            withSequence?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments {
            artifacts?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp {
            url: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw {
            data: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn {
            error?: boolean;
            failed?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence {
            count?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceCount;
            end?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceEnd;
            format?: string;
            start?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceStart;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceCount {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceEnd {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequenceStart {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesExecutor {
            serviceAccountName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainers {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv[];
            envFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources;
            securityContext?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle {
            postStart?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesRequests};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesLimits {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersResourcesRequests {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputs {
            artifacts?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsParameters[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3;
            subPath?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp {
            url: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw {
            data: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMemoize {
            cache: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache;
            key: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMemoizeCache {
            configMap: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMemoizeCacheConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMetrics {
            prometheus: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter {
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputs {
            artifacts?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts[];
            exitCode?: string;
            parameters?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters[];
            result?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3;
            subPath?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp {
            url: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw {
            data: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesResource {
            action: string;
            failureCondition?: string;
            flags?: string[];
            manifest?: string;
            mergeStrategy?: string;
            setOwnerReference?: boolean;
            successCondition?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy {
            backoff?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff;
            limit?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyLimit;
            retryPolicy?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff {
            duration?: string;
            factor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoffFactor;
            maxDuration?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoffFactor {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyLimit {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScript {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnv[];
            envFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom[];
            image: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe;
            name?: string;
            ports?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptResources;
            securityContext?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext;
            source: string;
            startupProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts[];
            workingDir?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle {
            postStart?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesRequests};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesLimits {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptResourcesRequests {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecars {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv[];
            envFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources;
            securityContext?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts[];
            workingDir?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle {
            postStart?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesRequests};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesLimits {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsResourcesRequests {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe {
            exec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec {
            command?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSuspend {
            duration?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSynchronization {
            mutex?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSynchronizationMutex {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPIItems[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDirSizeLimit;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDirSizeLimit {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecTtlStrategy {
            secondsAfterCompletion?: number;
            secondsAfterFailure?: number;
            secondsAfterSuccess?: number;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplates {
            apiVersion?: string;
            kind?: string;
            metadata?: {[key: string]: any};
            spec?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec;
            status?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec {
            accessModes?: string[];
            dataSource?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource;
            resources?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources;
            selector?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector;
            storageClassName?: string;
            volumeMode?: string;
            volumeName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource {
            apiGroup?: string;
            kind: string;
            name: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesRequests};
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesLimits {
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResourcesRequests {
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus {
            accessModes?: string[];
            capacity?: {[key: string]: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusCapacity};
            conditions?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions[];
            phase?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusCapacity {
        }

        export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions {
            lastProbeTime?: string;
            lastTransitionTime?: string;
            message?: string;
            reason?: string;
            status: string;
            type: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesVsphereVolume;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesDownwardAPIItems[];
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesEmptyDirSizeLimit;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesEmptyDirSizeLimit {
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSources[];
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef;
            user?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef {
            name?: string;
        }

        export interface CronWorkflowSpecWorkflowSpecVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface CronWorkflowSpecWorkflowSpecWorkflowTemplateRef {
            clusterScope?: boolean;
            name?: string;
        }

        export interface CronWorkflowStatus {
            active?: outputs.argoproj.v1alpha1.CronWorkflowStatusActive[];
            conditions?: outputs.argoproj.v1alpha1.CronWorkflowStatusConditions[];
            lastScheduledTime?: string;
        }

        export interface CronWorkflowStatusActive {
            apiVersion?: string;
            fieldPath?: string;
            kind?: string;
            name?: string;
            namespace?: string;
            resourceVersion?: string;
            uid?: string;
        }

        export interface CronWorkflowStatusConditions {
            message?: string;
            status?: string;
            type?: string;
        }

        export interface WorkflowEventBindingSpec {
            event: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecEvent;
            submit?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmit;
        }

        export interface WorkflowEventBindingSpecEvent {
            selector: string;
        }

        export interface WorkflowEventBindingSpecSubmit {
            arguments?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArguments;
            workflowTemplateRef: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitWorkflowTemplateRef;
        }

        export interface WorkflowEventBindingSpecSubmitArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsParameters[];
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowEventBindingSpecSubmitArgumentsParametersValueFrom;
        }

        export interface WorkflowEventBindingSpecSubmitArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowEventBindingSpecSubmitWorkflowTemplateRef {
            clusterScope?: boolean;
            name?: string;
        }

        export interface WorkflowSpec {
            activeDeadlineSeconds?: number;
            affinity?: outputs.argoproj.v1alpha1.WorkflowSpecAffinity;
            arguments?: outputs.argoproj.v1alpha1.WorkflowSpecArguments;
            artifactRepositoryRef?: outputs.argoproj.v1alpha1.WorkflowSpecArtifactRepositoryRef;
            automountServiceAccountToken?: boolean;
            dnsConfig?: outputs.argoproj.v1alpha1.WorkflowSpecDnsConfig;
            dnsPolicy?: string;
            entrypoint?: string;
            executor?: outputs.argoproj.v1alpha1.WorkflowSpecExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.WorkflowSpecHostAliases[];
            hostNetwork?: boolean;
            imagePullSecrets?: outputs.argoproj.v1alpha1.WorkflowSpecImagePullSecrets[];
            metrics?: outputs.argoproj.v1alpha1.WorkflowSpecMetrics;
            nodeSelector?: {[key: string]: string};
            onExit?: string;
            parallelism?: number;
            podDisruptionBudget?: outputs.argoproj.v1alpha1.WorkflowSpecPodDisruptionBudget;
            podGC?: outputs.argoproj.v1alpha1.WorkflowSpecPodGC;
            podPriority?: number;
            podPriorityClassName?: string;
            podSpecPatch?: string;
            priority?: number;
            schedulerName?: string;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowSpecSecurityContext;
            serviceAccountName?: string;
            shutdown?: string;
            suspend?: boolean;
            synchronization?: outputs.argoproj.v1alpha1.WorkflowSpecSynchronization;
            templates?: outputs.argoproj.v1alpha1.WorkflowSpecTemplates[];
            tolerations?: outputs.argoproj.v1alpha1.WorkflowSpecTolerations[];
            ttlSecondsAfterFinished?: number;
            ttlStrategy?: outputs.argoproj.v1alpha1.WorkflowSpecTtlStrategy;
            volumeClaimTemplates?: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplates[];
            volumes?: outputs.argoproj.v1alpha1.WorkflowSpecVolumes[];
            workflowTemplateRef?: outputs.argoproj.v1alpha1.WorkflowSpecWorkflowTemplateRef;
        }

        export interface WorkflowSpecAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAntiAffinity;
        }

        export interface WorkflowSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsParameters[];
        }

        export interface WorkflowSpecArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowSpecArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowSpecArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowSpecArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowSpecArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowSpecArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowSpecArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowSpecArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowSpecArgumentsParametersValueFrom;
        }

        export interface WorkflowSpecArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowSpecArtifactRepositoryRef {
            configMap?: string;
            key?: string;
        }

        export interface WorkflowSpecDnsConfig {
            nameservers?: string[];
            options?: outputs.argoproj.v1alpha1.WorkflowSpecDnsConfigOptions[];
            searches?: string[];
        }

        export interface WorkflowSpecDnsConfigOptions {
            name?: string;
            value?: string;
        }

        export interface WorkflowSpecExecutor {
            serviceAccountName?: string;
        }

        export interface WorkflowSpecHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface WorkflowSpecImagePullSecrets {
            name?: string;
        }

        export interface WorkflowSpecMetrics {
            prometheus: outputs.argoproj.v1alpha1.WorkflowSpecMetricsPrometheus[];
        }

        export interface WorkflowSpecMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.WorkflowSpecMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.WorkflowSpecMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.WorkflowSpecMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.WorkflowSpecMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface WorkflowSpecMetricsPrometheusCounter {
            value: string;
        }

        export interface WorkflowSpecMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface WorkflowSpecMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface WorkflowSpecMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface WorkflowSpecPodDisruptionBudget {
            maxUnavailable?: outputs.argoproj.v1alpha1.WorkflowSpecPodDisruptionBudgetMaxUnavailable;
            minAvailable?: outputs.argoproj.v1alpha1.WorkflowSpecPodDisruptionBudgetMinAvailable;
            selector?: outputs.argoproj.v1alpha1.WorkflowSpecPodDisruptionBudgetSelector;
        }

        export interface WorkflowSpecPodDisruptionBudgetMaxUnavailable {
        }

        export interface WorkflowSpecPodDisruptionBudgetMinAvailable {
        }

        export interface WorkflowSpecPodDisruptionBudgetSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecPodDisruptionBudgetSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecPodDisruptionBudgetSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecPodGC {
            strategy?: string;
        }

        export interface WorkflowSpecSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowSpecSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.WorkflowSpecSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowSpecSecurityContextWindowsOptions;
        }

        export interface WorkflowSpecSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowSpecSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface WorkflowSpecSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowSpecSynchronization {
            mutex?: outputs.argoproj.v1alpha1.WorkflowSpecSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.WorkflowSpecSynchronizationSemaphore;
        }

        export interface WorkflowSpecSynchronizationMutex {
            name?: string;
        }

        export interface WorkflowSpecSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface WorkflowSpecSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplates {
            activeDeadlineSeconds?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesActiveDeadlineSeconds;
            affinity?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinity;
            archiveLocation?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocation;
            arguments?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArguments;
            automountServiceAccountToken?: boolean;
            container?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainer;
            daemon?: boolean;
            dag?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDag;
            executor?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesHostAliases[];
            initContainers?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainers[];
            inputs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputs;
            memoize?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMemoize;
            metadata?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMetadata;
            metrics?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMetrics;
            name: string;
            nodeSelector?: {[key: string]: string};
            outputs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputs;
            parallelism?: number;
            podSpecPatch?: string;
            priority?: number;
            priorityClassName?: string;
            resource?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesResource;
            resubmitPendingPods?: boolean;
            retryStrategy?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesRetryStrategy;
            schedulerName?: string;
            script?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScript;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSecurityContext;
            serviceAccountName?: string;
            sidecars?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecars[];
            steps?: any[][];
            suspend?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSuspend;
            synchronization?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSynchronization;
            template?: string;
            templateRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesTemplateRef;
            timeout?: string;
            tolerations?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesTolerations[];
            volumes?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumes[];
        }

        export interface WorkflowSpecTemplatesActiveDeadlineSeconds {
        }

        export interface WorkflowSpecTemplatesAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAntiAffinity;
        }

        export interface WorkflowSpecTemplatesAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecTemplatesAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecTemplatesAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecTemplatesArchiveLocation {
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationArtifactory;
            gcs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationGit;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationHttp;
            oss?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationOss;
            raw?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationS3;
        }

        export interface WorkflowSpecTemplatesArchiveLocationArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret;
        }

        export interface WorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;
        }

        export interface WorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationGitUsernameSecret;
        }

        export interface WorkflowSpecTemplatesArchiveLocationGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationHttp {
            url: string;
        }

        export interface WorkflowSpecTemplatesArchiveLocationOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationOssSecretKeySecret;
        }

        export interface WorkflowSpecTemplatesArchiveLocationOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationRaw {
            data: string;
        }

        export interface WorkflowSpecTemplatesArchiveLocationS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArchiveLocationS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArchiveLocationS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsParameters[];
        }

        export interface WorkflowSpecTemplatesArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesArgumentsParametersValueFrom;
        }

        export interface WorkflowSpecTemplatesArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowSpecTemplatesContainer {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnvFrom[];
            image: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLivenessProbe;
            name?: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowSpecTemplatesContainerEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnvValueFrom;
        }

        export interface WorkflowSpecTemplatesContainerEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnvFromSecretRef;
        }

        export interface WorkflowSpecTemplatesContainerEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesContainerEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesContainerEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef;
        }

        export interface WorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesContainerEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesContainerLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePreStop;
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket;
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket;
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesContainerLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesContainerLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesContainerLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesContainerLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesContainerLivenessProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesContainerLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesContainerLivenessProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesContainerPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowSpecTemplatesContainerReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesContainerReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesContainerReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesContainerReadinessProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesContainerReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesContainerReadinessProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesContainerResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerResourcesRequests};
        }

        export interface WorkflowSpecTemplatesContainerResourcesLimits {
        }

        export interface WorkflowSpecTemplatesContainerResourcesRequests {
        }

        export interface WorkflowSpecTemplatesContainerSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerSecurityContextWindowsOptions;
        }

        export interface WorkflowSpecTemplatesContainerSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowSpecTemplatesContainerSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowSpecTemplatesContainerStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesContainerStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesContainerStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesContainerStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesContainerStartupProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesContainerStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesContainerStartupProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesContainerStartupProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesContainerVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowSpecTemplatesContainerVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowSpecTemplatesDag {
            failFast?: boolean;
            target?: string;
            tasks: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasks[];
        }

        export interface WorkflowSpecTemplatesDagTasks {
            arguments?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArguments;
            continueOn?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksContinueOn;
            dependencies?: string[];
            depends?: string;
            name: string;
            onExit?: string;
            template: string;
            templateRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksTemplateRef;
            when?: string;
            withItems?: {[key: string]: any}[];
            withParam?: string;
            withSequence?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksWithSequence;
        }

        export interface WorkflowSpecTemplatesDagTasksArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsParameters[];
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom;
        }

        export interface WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowSpecTemplatesDagTasksContinueOn {
            error?: boolean;
            failed?: boolean;
        }

        export interface WorkflowSpecTemplatesDagTasksTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface WorkflowSpecTemplatesDagTasksWithSequence {
            count?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksWithSequenceCount;
            end?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksWithSequenceEnd;
            format?: string;
            start?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesDagTasksWithSequenceStart;
        }

        export interface WorkflowSpecTemplatesDagTasksWithSequenceCount {
        }

        export interface WorkflowSpecTemplatesDagTasksWithSequenceEnd {
        }

        export interface WorkflowSpecTemplatesDagTasksWithSequenceStart {
        }

        export interface WorkflowSpecTemplatesExecutor {
            serviceAccountName?: string;
        }

        export interface WorkflowSpecTemplatesHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface WorkflowSpecTemplatesInitContainers {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowSpecTemplatesInitContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnvValueFrom;
        }

        export interface WorkflowSpecTemplatesInitContainersEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnvFromSecretRef;
        }

        export interface WorkflowSpecTemplatesInitContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInitContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInitContainersEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef;
        }

        export interface WorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInitContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePreStop;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesInitContainersLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesInitContainersLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesInitContainersLivenessProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesInitContainersLivenessProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesInitContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowSpecTemplatesInitContainersReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesInitContainersReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesInitContainersReadinessProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesInitContainersReadinessProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesInitContainersResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersResourcesRequests};
        }

        export interface WorkflowSpecTemplatesInitContainersResourcesLimits {
        }

        export interface WorkflowSpecTemplatesInitContainersResourcesRequests {
        }

        export interface WorkflowSpecTemplatesInitContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions;
        }

        export interface WorkflowSpecTemplatesInitContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowSpecTemplatesInitContainersStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesInitContainersStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesInitContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesInitContainersStartupProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesInitContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesInitContainersStartupProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesInitContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowSpecTemplatesInitContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowSpecTemplatesInputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsParameters[];
        }

        export interface WorkflowSpecTemplatesInputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsArchiveTar;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesInputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesInputsParametersValueFrom;
        }

        export interface WorkflowSpecTemplatesInputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowSpecTemplatesMemoize {
            cache: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMemoizeCache;
            key: string;
        }

        export interface WorkflowSpecTemplatesMemoizeCache {
            configMap: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMemoizeCacheConfigMap;
        }

        export interface WorkflowSpecTemplatesMemoizeCacheConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface WorkflowSpecTemplatesMetrics {
            prometheus: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMetricsPrometheus[];
        }

        export interface WorkflowSpecTemplatesMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface WorkflowSpecTemplatesMetricsPrometheusCounter {
            value: string;
        }

        export interface WorkflowSpecTemplatesMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface WorkflowSpecTemplatesMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface WorkflowSpecTemplatesMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesOutputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifacts[];
            exitCode?: string;
            parameters?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsParameters[];
            result?: string;
        }

        export interface WorkflowSpecTemplatesOutputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsArchiveTar;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesOutputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesOutputsParametersValueFrom;
        }

        export interface WorkflowSpecTemplatesOutputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowSpecTemplatesResource {
            action: string;
            failureCondition?: string;
            flags?: string[];
            manifest?: string;
            mergeStrategy?: string;
            setOwnerReference?: boolean;
            successCondition?: string;
        }

        export interface WorkflowSpecTemplatesRetryStrategy {
            backoff?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesRetryStrategyBackoff;
            limit?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesRetryStrategyLimit;
            retryPolicy?: string;
        }

        export interface WorkflowSpecTemplatesRetryStrategyBackoff {
            duration?: string;
            factor?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesRetryStrategyBackoffFactor;
            maxDuration?: string;
        }

        export interface WorkflowSpecTemplatesRetryStrategyBackoffFactor {
        }

        export interface WorkflowSpecTemplatesRetryStrategyLimit {
        }

        export interface WorkflowSpecTemplatesScript {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnvFrom[];
            image: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLivenessProbe;
            name?: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptSecurityContext;
            source: string;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowSpecTemplatesScriptEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnvValueFrom;
        }

        export interface WorkflowSpecTemplatesScriptEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnvFromSecretRef;
        }

        export interface WorkflowSpecTemplatesScriptEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesScriptEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesScriptEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef;
        }

        export interface WorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesScriptEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesScriptLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePreStop;
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket;
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket;
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesScriptLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesScriptLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesScriptLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesScriptLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesScriptLivenessProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesScriptLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesScriptLivenessProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesScriptPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowSpecTemplatesScriptReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesScriptReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesScriptReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesScriptReadinessProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesScriptReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesScriptReadinessProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesScriptResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptResourcesRequests};
        }

        export interface WorkflowSpecTemplatesScriptResourcesLimits {
        }

        export interface WorkflowSpecTemplatesScriptResourcesRequests {
        }

        export interface WorkflowSpecTemplatesScriptSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptSecurityContextWindowsOptions;
        }

        export interface WorkflowSpecTemplatesScriptSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowSpecTemplatesScriptSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowSpecTemplatesScriptStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesScriptStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesScriptStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesScriptStartupProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesScriptStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesScriptStartupProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesScriptStartupProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesScriptVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowSpecTemplatesScriptVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowSpecTemplatesSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSecurityContextWindowsOptions;
        }

        export interface WorkflowSpecTemplatesSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowSpecTemplatesSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowSpecTemplatesSidecars {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowSpecTemplatesSidecarsEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnvValueFrom;
        }

        export interface WorkflowSpecTemplatesSidecarsEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnvFromSecretRef;
        }

        export interface WorkflowSpecTemplatesSidecarsEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesSidecarsEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesSidecarsEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef;
        }

        export interface WorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesSidecarsEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePreStop;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesSidecarsLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesSidecarsLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesSidecarsLivenessProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesSidecarsLivenessProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesSidecarsPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowSpecTemplatesSidecarsReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesSidecarsReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesSidecarsReadinessProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesSidecarsReadinessProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesSidecarsResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsResourcesRequests};
        }

        export interface WorkflowSpecTemplatesSidecarsResourcesLimits {
        }

        export interface WorkflowSpecTemplatesSidecarsResourcesRequests {
        }

        export interface WorkflowSpecTemplatesSidecarsSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions;
        }

        export interface WorkflowSpecTemplatesSidecarsSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowSpecTemplatesSidecarsStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowSpecTemplatesSidecarsStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowSpecTemplatesSidecarsStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowSpecTemplatesSidecarsStartupProbeHttpGetPort {
        }

        export interface WorkflowSpecTemplatesSidecarsStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort;
        }

        export interface WorkflowSpecTemplatesSidecarsStartupProbeTcpSocketPort {
        }

        export interface WorkflowSpecTemplatesSidecarsVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowSpecTemplatesSidecarsVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowSpecTemplatesSuspend {
            duration?: string;
        }

        export interface WorkflowSpecTemplatesSynchronization {
            mutex?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSynchronizationSemaphore;
        }

        export interface WorkflowSpecTemplatesSynchronizationMutex {
            name?: string;
        }

        export interface WorkflowSpecTemplatesSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface WorkflowSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface WorkflowSpecTemplatesTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface WorkflowSpecTemplatesVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesVsphereVolume;
        }

        export interface WorkflowSpecTemplatesVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowSpecTemplatesVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface WorkflowSpecTemplatesVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface WorkflowSpecTemplatesVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesCephfsSecretRef;
            user?: string;
        }

        export interface WorkflowSpecTemplatesVolumesCephfsSecretRef {
            name?: string;
        }

        export interface WorkflowSpecTemplatesVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface WorkflowSpecTemplatesVolumesCinderSecretRef {
            name?: string;
        }

        export interface WorkflowSpecTemplatesVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowSpecTemplatesVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface WorkflowSpecTemplatesVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface WorkflowSpecTemplatesVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesDownwardAPIItems[];
        }

        export interface WorkflowSpecTemplatesVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowSpecTemplatesVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowSpecTemplatesVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesEmptyDirSizeLimit;
        }

        export interface WorkflowSpecTemplatesVolumesEmptyDirSizeLimit {
        }

        export interface WorkflowSpecTemplatesVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface WorkflowSpecTemplatesVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesFlexVolumeSecretRef;
        }

        export interface WorkflowSpecTemplatesVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface WorkflowSpecTemplatesVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface WorkflowSpecTemplatesVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface WorkflowSpecTemplatesVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface WorkflowSpecTemplatesVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface WorkflowSpecTemplatesVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface WorkflowSpecTemplatesVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface WorkflowSpecTemplatesVolumesIscsiSecretRef {
            name?: string;
        }

        export interface WorkflowSpecTemplatesVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface WorkflowSpecTemplatesVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface WorkflowSpecTemplatesVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface WorkflowSpecTemplatesVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowSpecTemplatesVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSources[];
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken;
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface WorkflowSpecTemplatesVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface WorkflowSpecTemplatesVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesRbdSecretRef;
            user?: string;
        }

        export interface WorkflowSpecTemplatesVolumesRbdSecretRef {
            name?: string;
        }

        export interface WorkflowSpecTemplatesVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface WorkflowSpecTemplatesVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface WorkflowSpecTemplatesVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface WorkflowSpecTemplatesVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowSpecTemplatesVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecTemplatesVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface WorkflowSpecTemplatesVolumesStorageosSecretRef {
            name?: string;
        }

        export interface WorkflowSpecTemplatesVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface WorkflowSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface WorkflowSpecTtlStrategy {
            secondsAfterCompletion?: number;
            secondsAfterFailure?: number;
            secondsAfterSuccess?: number;
        }

        export interface WorkflowSpecVolumeClaimTemplates {
            apiVersion?: string;
            kind?: string;
            metadata?: {[key: string]: any};
            spec?: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesSpec;
            status?: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesStatus;
        }

        export interface WorkflowSpecVolumeClaimTemplatesSpec {
            accessModes?: string[];
            dataSource?: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesSpecDataSource;
            resources?: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesSpecResources;
            selector?: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesSpecSelector;
            storageClassName?: string;
            volumeMode?: string;
            volumeName?: string;
        }

        export interface WorkflowSpecVolumeClaimTemplatesSpecDataSource {
            apiGroup?: string;
            kind: string;
            name: string;
        }

        export interface WorkflowSpecVolumeClaimTemplatesSpecResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesSpecResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesSpecResourcesRequests};
        }

        export interface WorkflowSpecVolumeClaimTemplatesSpecResourcesLimits {
        }

        export interface WorkflowSpecVolumeClaimTemplatesSpecResourcesRequests {
        }

        export interface WorkflowSpecVolumeClaimTemplatesSpecSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowSpecVolumeClaimTemplatesStatus {
            accessModes?: string[];
            capacity?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesStatusCapacity};
            conditions?: outputs.argoproj.v1alpha1.WorkflowSpecVolumeClaimTemplatesStatusConditions[];
            phase?: string;
        }

        export interface WorkflowSpecVolumeClaimTemplatesStatusCapacity {
        }

        export interface WorkflowSpecVolumeClaimTemplatesStatusConditions {
            lastProbeTime?: string;
            lastTransitionTime?: string;
            message?: string;
            reason?: string;
            status: string;
            type: string;
        }

        export interface WorkflowSpecVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesVsphereVolume;
        }

        export interface WorkflowSpecVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowSpecVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface WorkflowSpecVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface WorkflowSpecVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesCephfsSecretRef;
            user?: string;
        }

        export interface WorkflowSpecVolumesCephfsSecretRef {
            name?: string;
        }

        export interface WorkflowSpecVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface WorkflowSpecVolumesCinderSecretRef {
            name?: string;
        }

        export interface WorkflowSpecVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowSpecVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface WorkflowSpecVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface WorkflowSpecVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesDownwardAPIItems[];
        }

        export interface WorkflowSpecVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowSpecVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowSpecVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowSpecVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowSpecVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesEmptyDirSizeLimit;
        }

        export interface WorkflowSpecVolumesEmptyDirSizeLimit {
        }

        export interface WorkflowSpecVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface WorkflowSpecVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesFlexVolumeSecretRef;
        }

        export interface WorkflowSpecVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface WorkflowSpecVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface WorkflowSpecVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface WorkflowSpecVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface WorkflowSpecVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface WorkflowSpecVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface WorkflowSpecVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface WorkflowSpecVolumesIscsiSecretRef {
            name?: string;
        }

        export interface WorkflowSpecVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface WorkflowSpecVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface WorkflowSpecVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface WorkflowSpecVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowSpecVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSources[];
        }

        export interface WorkflowSpecVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesServiceAccountToken;
        }

        export interface WorkflowSpecVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowSpecVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface WorkflowSpecVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowSpecVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowSpecVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowSpecVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface WorkflowSpecVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface WorkflowSpecVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesRbdSecretRef;
            user?: string;
        }

        export interface WorkflowSpecVolumesRbdSecretRef {
            name?: string;
        }

        export interface WorkflowSpecVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.WorkflowSpecVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface WorkflowSpecVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface WorkflowSpecVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface WorkflowSpecVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowSpecVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowSpecVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface WorkflowSpecVolumesStorageosSecretRef {
            name?: string;
        }

        export interface WorkflowSpecVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface WorkflowSpecWorkflowTemplateRef {
            clusterScope?: boolean;
            name?: string;
        }

        export interface WorkflowStatus {
            compressedNodes?: string;
            conditions?: outputs.argoproj.v1alpha1.WorkflowStatusConditions[];
            finishedAt?: string;
            message?: string;
            nodes?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusNodes};
            offloadNodeStatusVersion?: string;
            outputs?: outputs.argoproj.v1alpha1.WorkflowStatusOutputs;
            persistentVolumeClaims?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaims[];
            phase?: string;
            resourcesDuration?: {[key: string]: number};
            startedAt?: string;
            storedTemplates?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplates};
            storedWorkflowTemplateSpec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpec;
            synchronization?: outputs.argoproj.v1alpha1.WorkflowStatusSynchronization;
        }

        export interface WorkflowStatusConditions {
            message?: string;
            status?: string;
            type?: string;
        }

        export interface WorkflowStatusNodes {
            boundaryID?: string;
            children?: string[];
            daemoned?: boolean;
            displayName?: string;
            finishedAt?: string;
            hostNodeName?: string;
            id: string;
            inputs?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputs;
            memoizationStatus?: outputs.argoproj.v1alpha1.WorkflowStatusNodesMemoizationStatus;
            message?: string;
            name: string;
            outboundNodes?: string[];
            outputs?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputs;
            phase?: string;
            podIP?: string;
            resourcesDuration?: {[key: string]: number};
            startedAt?: string;
            storedTemplateID?: string;
            templateName?: string;
            templateRef?: outputs.argoproj.v1alpha1.WorkflowStatusNodesTemplateRef;
            templateScope?: string;
            type: string;
            workflowTemplateName?: string;
        }

        export interface WorkflowStatusNodesInputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsParameters[];
        }

        export interface WorkflowStatusNodesInputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusNodesInputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsArchiveTar;
        }

        export interface WorkflowStatusNodesInputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusNodesInputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusNodesInputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusNodesInputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusNodesInputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusNodesInputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusNodesInputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusNodesInputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusNodesInputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesInputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusNodesInputsParametersValueFrom;
        }

        export interface WorkflowStatusNodesInputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusNodesMemoizationStatus {
            cacheName: string;
            hit: boolean;
            key: string;
        }

        export interface WorkflowStatusNodesOutputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifacts[];
            exitCode?: string;
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsParameters[];
            result?: string;
        }

        export interface WorkflowStatusNodesOutputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusNodesOutputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsArchiveTar;
        }

        export interface WorkflowStatusNodesOutputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusNodesOutputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusNodesOutputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusNodesOutputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusNodesOutputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusNodesOutputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusNodesOutputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusNodesOutputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusNodesOutputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusNodesOutputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusNodesOutputsParametersValueFrom;
        }

        export interface WorkflowStatusNodesOutputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusNodesTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface WorkflowStatusOutputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifacts[];
            exitCode?: string;
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsParameters[];
            result?: string;
        }

        export interface WorkflowStatusOutputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusOutputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsArchiveTar;
        }

        export interface WorkflowStatusOutputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusOutputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusOutputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusOutputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusOutputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusOutputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusOutputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusOutputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusOutputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusOutputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusOutputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusOutputsParametersValueFrom;
        }

        export interface WorkflowStatusOutputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusPersistentVolumeClaims {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsCephfs;
            cinder?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsCinder;
            configMap?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsConfigMap;
            csi?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsEmptyDir;
            fc?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsFc;
            flexVolume?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsHostPath;
            iscsi?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjected;
            quobyte?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsQuobyte;
            rbd?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsRbd;
            scaleIO?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsScaleIO;
            secret?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsSecret;
            storageos?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsVsphereVolume;
        }

        export interface WorkflowStatusPersistentVolumeClaimsAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusPersistentVolumeClaimsAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsCephfsSecretRef;
            user?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsCephfsSecretRef {
            name?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsCinderSecretRef;
            volumeID: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsCinderSecretRef {
            name?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusPersistentVolumeClaimsConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface WorkflowStatusPersistentVolumeClaimsCsiNodePublishSecretRef {
            name?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsDownwardAPIItems[];
        }

        export interface WorkflowStatusPersistentVolumeClaimsDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowStatusPersistentVolumeClaimsDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowStatusPersistentVolumeClaimsEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsEmptyDirSizeLimit;
        }

        export interface WorkflowStatusPersistentVolumeClaimsEmptyDirSizeLimit {
        }

        export interface WorkflowStatusPersistentVolumeClaimsFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface WorkflowStatusPersistentVolumeClaimsFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsFlexVolumeSecretRef;
        }

        export interface WorkflowStatusPersistentVolumeClaimsFlexVolumeSecretRef {
            name?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusPersistentVolumeClaimsGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusPersistentVolumeClaimsHostPath {
            path: string;
            type?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsIscsiSecretRef;
            targetPortal: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsIscsiSecretRef {
            name?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusPersistentVolumeClaimsPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSources[];
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesServiceAccountToken;
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPIItems[];
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsRbdSecretRef;
            user?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsRbdSecretRef {
            name?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsScaleIOSecretRef {
            name?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusPersistentVolumeClaimsStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsStorageosSecretRef {
            name?: string;
        }

        export interface WorkflowStatusPersistentVolumeClaimsVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface WorkflowStatusStoredTemplates {
            activeDeadlineSeconds?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesActiveDeadlineSeconds;
            affinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinity;
            archiveLocation?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocation;
            arguments?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArguments;
            automountServiceAccountToken?: boolean;
            container?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainer;
            daemon?: boolean;
            dag?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDag;
            executor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesHostAliases[];
            initContainers?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainers[];
            inputs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputs;
            memoize?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMemoize;
            metadata?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMetadata;
            metrics?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMetrics;
            name: string;
            nodeSelector?: {[key: string]: string};
            outputs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputs;
            parallelism?: number;
            podSpecPatch?: string;
            priority?: number;
            priorityClassName?: string;
            resource?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesResource;
            resubmitPendingPods?: boolean;
            retryStrategy?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesRetryStrategy;
            schedulerName?: string;
            script?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScript;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSecurityContext;
            serviceAccountName?: string;
            sidecars?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecars[];
            steps?: any[][];
            suspend?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSuspend;
            synchronization?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSynchronization;
            template?: string;
            templateRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesTemplateRef;
            timeout?: string;
            tolerations?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesTolerations[];
            volumes?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumes[];
        }

        export interface WorkflowStatusStoredTemplatesActiveDeadlineSeconds {
        }

        export interface WorkflowStatusStoredTemplatesAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAntiAffinity;
        }

        export interface WorkflowStatusStoredTemplatesAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface WorkflowStatusStoredTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface WorkflowStatusStoredTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocation {
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationArtifactory;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationGit;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationHttp;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationOss;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationS3;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationGitUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationHttp {
            url: string;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationRaw {
            data: string;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArchiveLocationS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArchiveLocationS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsParameters[];
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesArgumentsParametersValueFrom;
        }

        export interface WorkflowStatusStoredTemplatesArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusStoredTemplatesContainer {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLivenessProbe;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnvValueFrom;
        }

        export interface WorkflowStatusStoredTemplatesContainerEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnvFromSecretRef;
        }

        export interface WorkflowStatusStoredTemplatesContainerEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesContainerEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesContainerEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnvValueFromSecretKeyRef;
        }

        export interface WorkflowStatusStoredTemplatesContainerEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesContainerEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredTemplatesContainerEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePreStop;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePostStartTcpSocket;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePreStopTcpSocket;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesContainerLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesContainerLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesContainerLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerLivenessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerLivenessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesContainerLivenessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesContainerReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesContainerReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerReadinessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerReadinessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesContainerReadinessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerResourcesRequests};
        }

        export interface WorkflowStatusStoredTemplatesContainerResourcesLimits {
        }

        export interface WorkflowStatusStoredTemplatesContainerResourcesRequests {
        }

        export interface WorkflowStatusStoredTemplatesContainerSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredTemplatesContainerSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowStatusStoredTemplatesContainerSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesContainerStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesContainerStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerStartupProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesContainerStartupProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesContainerStartupProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesContainerVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowStatusStoredTemplatesContainerVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowStatusStoredTemplatesDag {
            failFast?: boolean;
            target?: string;
            tasks: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasks[];
        }

        export interface WorkflowStatusStoredTemplatesDagTasks {
            arguments?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArguments;
            continueOn?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksContinueOn;
            dependencies?: string[];
            depends?: string;
            name: string;
            onExit?: string;
            template: string;
            templateRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksTemplateRef;
            when?: string;
            withItems?: {[key: string]: any}[];
            withParam?: string;
            withSequence?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksWithSequence;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsParameters[];
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksArgumentsParametersValueFrom;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusStoredTemplatesDagTasksContinueOn {
            error?: boolean;
            failed?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksWithSequence {
            count?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksWithSequenceCount;
            end?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksWithSequenceEnd;
            format?: string;
            start?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesDagTasksWithSequenceStart;
        }

        export interface WorkflowStatusStoredTemplatesDagTasksWithSequenceCount {
        }

        export interface WorkflowStatusStoredTemplatesDagTasksWithSequenceEnd {
        }

        export interface WorkflowStatusStoredTemplatesDagTasksWithSequenceStart {
        }

        export interface WorkflowStatusStoredTemplatesExecutor {
            serviceAccountName?: string;
        }

        export interface WorkflowStatusStoredTemplatesHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainers {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnvValueFrom;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnvFromSecretRef;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnvValueFromSecretKeyRef;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePreStop;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartTcpSocket;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopTcpSocket;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLivenessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersLivenessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersLivenessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesInitContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersReadinessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersReadinessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersReadinessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersResourcesRequests};
        }

        export interface WorkflowStatusStoredTemplatesInitContainersResourcesLimits {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersResourcesRequests {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowStatusStoredTemplatesInitContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesInitContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersStartupProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInitContainersStartupProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersStartupProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesInitContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowStatusStoredTemplatesInitContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowStatusStoredTemplatesInputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsParameters[];
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsArchiveTar;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesInputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesInputsParametersValueFrom;
        }

        export interface WorkflowStatusStoredTemplatesInputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusStoredTemplatesMemoize {
            cache: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMemoizeCache;
            key: string;
        }

        export interface WorkflowStatusStoredTemplatesMemoizeCache {
            configMap: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMemoizeCacheConfigMap;
        }

        export interface WorkflowStatusStoredTemplatesMemoizeCacheConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredTemplatesMetrics {
            prometheus: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMetricsPrometheus[];
        }

        export interface WorkflowStatusStoredTemplatesMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface WorkflowStatusStoredTemplatesMetricsPrometheusCounter {
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesOutputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifacts[];
            exitCode?: string;
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsParameters[];
            result?: string;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsArchiveTar;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesOutputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesOutputsParametersValueFrom;
        }

        export interface WorkflowStatusStoredTemplatesOutputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusStoredTemplatesResource {
            action: string;
            failureCondition?: string;
            flags?: string[];
            manifest?: string;
            mergeStrategy?: string;
            setOwnerReference?: boolean;
            successCondition?: string;
        }

        export interface WorkflowStatusStoredTemplatesRetryStrategy {
            backoff?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesRetryStrategyBackoff;
            limit?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesRetryStrategyLimit;
            retryPolicy?: string;
        }

        export interface WorkflowStatusStoredTemplatesRetryStrategyBackoff {
            duration?: string;
            factor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesRetryStrategyBackoffFactor;
            maxDuration?: string;
        }

        export interface WorkflowStatusStoredTemplatesRetryStrategyBackoffFactor {
        }

        export interface WorkflowStatusStoredTemplatesRetryStrategyLimit {
        }

        export interface WorkflowStatusStoredTemplatesScript {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLivenessProbe;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptSecurityContext;
            source: string;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnvValueFrom;
        }

        export interface WorkflowStatusStoredTemplatesScriptEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnvFromSecretRef;
        }

        export interface WorkflowStatusStoredTemplatesScriptEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesScriptEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesScriptEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnvValueFromSecretKeyRef;
        }

        export interface WorkflowStatusStoredTemplatesScriptEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesScriptEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredTemplatesScriptEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePreStop;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePostStartTcpSocket;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePreStopTcpSocket;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesScriptLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesScriptLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesScriptLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptLivenessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptLivenessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesScriptLivenessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesScriptReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesScriptReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptReadinessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptReadinessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesScriptReadinessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptResourcesRequests};
        }

        export interface WorkflowStatusStoredTemplatesScriptResourcesLimits {
        }

        export interface WorkflowStatusStoredTemplatesScriptResourcesRequests {
        }

        export interface WorkflowStatusStoredTemplatesScriptSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredTemplatesScriptSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowStatusStoredTemplatesScriptSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesScriptStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesScriptStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptStartupProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesScriptStartupProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesScriptStartupProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesScriptVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowStatusStoredTemplatesScriptVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowStatusStoredTemplatesSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredTemplatesSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredTemplatesSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecars {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnvValueFrom;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnvFromSecretRef;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnvValueFromSecretKeyRef;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePreStop;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartTcpSocket;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopTcpSocket;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLivenessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsLivenessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsLivenessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesSidecarsReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsReadinessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsReadinessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsReadinessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsResourcesRequests};
        }

        export interface WorkflowStatusStoredTemplatesSidecarsResourcesLimits {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsResourcesRequests {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowStatusStoredTemplatesSidecarsSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredTemplatesSidecarsStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsStartupProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSidecarsStartupProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsStartupProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredTemplatesSidecarsVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowStatusStoredTemplatesSidecarsVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowStatusStoredTemplatesSuspend {
            duration?: string;
        }

        export interface WorkflowStatusStoredTemplatesSynchronization {
            mutex?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSynchronizationSemaphore;
        }

        export interface WorkflowStatusStoredTemplatesSynchronizationMutex {
            name?: string;
        }

        export interface WorkflowStatusStoredTemplatesSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface WorkflowStatusStoredTemplatesSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface WorkflowStatusStoredTemplatesTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesVsphereVolume;
        }

        export interface WorkflowStatusStoredTemplatesVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesCephfsSecretRef;
            user?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesCephfsSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesCinderSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredTemplatesVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesDownwardAPIItems[];
        }

        export interface WorkflowStatusStoredTemplatesVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowStatusStoredTemplatesVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredTemplatesVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesEmptyDirSizeLimit;
        }

        export interface WorkflowStatusStoredTemplatesVolumesEmptyDirSizeLimit {
        }

        export interface WorkflowStatusStoredTemplatesVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface WorkflowStatusStoredTemplatesVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesFlexVolumeSecretRef;
        }

        export interface WorkflowStatusStoredTemplatesVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesIscsiSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSources[];
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesServiceAccountToken;
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesRbdSecretRef;
            user?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesRbdSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredTemplatesVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesStorageosSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredTemplatesVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpec {
            activeDeadlineSeconds?: number;
            affinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinity;
            arguments?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArguments;
            artifactRepositoryRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArtifactRepositoryRef;
            automountServiceAccountToken?: boolean;
            dnsConfig?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecDnsConfig;
            dnsPolicy?: string;
            entrypoint?: string;
            executor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecHostAliases[];
            hostNetwork?: boolean;
            imagePullSecrets?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecImagePullSecrets[];
            metrics?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecMetrics;
            nodeSelector?: {[key: string]: string};
            onExit?: string;
            parallelism?: number;
            podDisruptionBudget?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudget;
            podGC?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecPodGC;
            podPriority?: number;
            podPriorityClassName?: string;
            podSpecPatch?: string;
            priority?: number;
            schedulerName?: string;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecSecurityContext;
            serviceAccountName?: string;
            shutdown?: string;
            suspend?: boolean;
            synchronization?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecSynchronization;
            templates?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplates[];
            tolerations?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTolerations[];
            ttlSecondsAfterFinished?: number;
            ttlStrategy?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTtlStrategy;
            volumeClaimTemplates?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplates[];
            volumes?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumes[];
            workflowTemplateRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecWorkflowTemplateRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinity;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsParameters[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecArgumentsParametersValueFrom;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecArtifactRepositoryRef {
            configMap?: string;
            key?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecDnsConfig {
            nameservers?: string[];
            options?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecDnsConfigOptions[];
            searches?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecDnsConfigOptions {
            name?: string;
            value?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecExecutor {
            serviceAccountName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecImagePullSecrets {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecMetrics {
            prometheus: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheus[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheusCounter {
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudget {
            maxUnavailable?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudgetMaxUnavailable;
            minAvailable?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudgetMinAvailable;
            selector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudgetSelector;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudgetMaxUnavailable {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudgetMinAvailable {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudgetSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecPodGC {
            strategy?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecSynchronization {
            mutex?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecSynchronizationSemaphore;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecSynchronizationMutex {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplates {
            activeDeadlineSeconds?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesActiveDeadlineSeconds;
            affinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinity;
            archiveLocation?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocation;
            arguments?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArguments;
            automountServiceAccountToken?: boolean;
            container?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainer;
            daemon?: boolean;
            dag?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDag;
            executor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesHostAliases[];
            initContainers?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainers[];
            inputs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputs;
            memoize?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMemoize;
            metadata?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetadata;
            metrics?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetrics;
            name: string;
            nodeSelector?: {[key: string]: string};
            outputs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputs;
            parallelism?: number;
            podSpecPatch?: string;
            priority?: number;
            priorityClassName?: string;
            resource?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesResource;
            resubmitPendingPods?: boolean;
            retryStrategy?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesRetryStrategy;
            schedulerName?: string;
            script?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScript;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSecurityContext;
            serviceAccountName?: string;
            sidecars?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecars[];
            steps?: any[][];
            suspend?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSuspend;
            synchronization?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSynchronization;
            template?: string;
            templateRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesTemplateRef;
            timeout?: string;
            tolerations?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesTolerations[];
            volumes?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumes[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesActiveDeadlineSeconds {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinity;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocation {
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationArtifactory;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGit;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHttp;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationOss;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationS3;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationHttp {
            url: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationRaw {
            data: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsParameters[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainer {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbe;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFrom;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvFromSecretRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStop;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerResourcesRequests};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerResourcesLimits {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerResourcesRequests {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesContainerVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDag {
            failFast?: boolean;
            target?: string;
            tasks: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasks[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasks {
            arguments?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArguments;
            continueOn?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksContinueOn;
            dependencies?: string[];
            depends?: string;
            name: string;
            onExit?: string;
            template: string;
            templateRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksTemplateRef;
            when?: string;
            withItems?: {[key: string]: any}[];
            withParam?: string;
            withSequence?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksWithSequence;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksContinueOn {
            error?: boolean;
            failed?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksWithSequence {
            count?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksWithSequenceCount;
            end?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksWithSequenceEnd;
            format?: string;
            start?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksWithSequenceStart;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksWithSequenceCount {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksWithSequenceEnd {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesDagTasksWithSequenceStart {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesExecutor {
            serviceAccountName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainers {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersResourcesRequests};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersResourcesLimits {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersResourcesRequests {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInitContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsParameters[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsParametersValueFrom;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesInputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMemoize {
            cache: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMemoizeCache;
            key: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMemoizeCache {
            configMap: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMemoizeCacheConfigMap;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMemoizeCacheConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetrics {
            prometheus: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheus[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheusCounter {
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifacts[];
            exitCode?: string;
            parameters?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsParameters[];
            result?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsParametersValueFrom;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesOutputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesResource {
            action: string;
            failureCondition?: string;
            flags?: string[];
            manifest?: string;
            mergeStrategy?: string;
            setOwnerReference?: boolean;
            successCondition?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesRetryStrategy {
            backoff?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesRetryStrategyBackoff;
            limit?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesRetryStrategyLimit;
            retryPolicy?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesRetryStrategyBackoff {
            duration?: string;
            factor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesRetryStrategyBackoffFactor;
            maxDuration?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesRetryStrategyBackoffFactor {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesRetryStrategyLimit {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScript {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbe;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptSecurityContext;
            source: string;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFrom;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvFromSecretRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStop;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptResourcesRequests};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptResourcesLimits {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptResourcesRequests {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesScriptVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecars {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsResourcesRequests};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsResourcesLimits {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsResourcesRequests {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocketPort;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocketPort {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSidecarsVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSuspend {
            duration?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSynchronization {
            mutex?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSynchronizationSemaphore;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSynchronizationMutex {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesVsphereVolume;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCephfsSecretRef;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCephfsSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCinderSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPIItems[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesEmptyDirSizeLimit;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesEmptyDirSizeLimit {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesIscsiSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSources[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesRbdSecretRef;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesRbdSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesStorageosSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTemplatesVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecTtlStrategy {
            secondsAfterCompletion?: number;
            secondsAfterFailure?: number;
            secondsAfterSuccess?: number;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplates {
            apiVersion?: string;
            kind?: string;
            metadata?: {[key: string]: any};
            spec?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpec;
            status?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesStatus;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpec {
            accessModes?: string[];
            dataSource?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource;
            resources?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecResources;
            selector?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecSelector;
            storageClassName?: string;
            volumeMode?: string;
            volumeName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource {
            apiGroup?: string;
            kind: string;
            name: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesRequests};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesLimits {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesRequests {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesStatus {
            accessModes?: string[];
            capacity?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesStatusCapacity};
            conditions?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions[];
            phase?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesStatusCapacity {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions {
            lastProbeTime?: string;
            lastTransitionTime?: string;
            message?: string;
            reason?: string;
            status: string;
            type: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesVsphereVolume;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesCephfsSecretRef;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesCephfsSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesCinderSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPIItems[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesEmptyDirSizeLimit;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesEmptyDirSizeLimit {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesFlexVolumeSecretRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesIscsiSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSources[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesRbdSecretRef;
            user?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesRbdSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowStatusStoredWorkflowTemplateSpecVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesStorageosSecretRef {
            name?: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface WorkflowStatusStoredWorkflowTemplateSpecWorkflowTemplateRef {
            clusterScope?: boolean;
            name?: string;
        }

        export interface WorkflowStatusSynchronization {
            mutex?: outputs.argoproj.v1alpha1.WorkflowStatusSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.WorkflowStatusSynchronizationSemaphore;
        }

        export interface WorkflowStatusSynchronizationMutex {
            holding?: outputs.argoproj.v1alpha1.WorkflowStatusSynchronizationMutexHolding[];
            waiting?: outputs.argoproj.v1alpha1.WorkflowStatusSynchronizationMutexWaiting[];
        }

        export interface WorkflowStatusSynchronizationMutexHolding {
            holder?: string;
            mutex?: string;
        }

        export interface WorkflowStatusSynchronizationMutexWaiting {
            holder?: string;
            mutex?: string;
        }

        export interface WorkflowStatusSynchronizationSemaphore {
            holding?: outputs.argoproj.v1alpha1.WorkflowStatusSynchronizationSemaphoreHolding[];
            waiting?: outputs.argoproj.v1alpha1.WorkflowStatusSynchronizationSemaphoreWaiting[];
        }

        export interface WorkflowStatusSynchronizationSemaphoreHolding {
            holders?: string[];
            semaphore?: string;
        }

        export interface WorkflowStatusSynchronizationSemaphoreWaiting {
            holders?: string[];
            semaphore?: string;
        }

        export interface WorkflowTemplateSpec {
            activeDeadlineSeconds?: number;
            affinity?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinity;
            arguments?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArguments;
            artifactRepositoryRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArtifactRepositoryRef;
            automountServiceAccountToken?: boolean;
            dnsConfig?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecDnsConfig;
            dnsPolicy?: string;
            entrypoint?: string;
            executor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecHostAliases[];
            hostNetwork?: boolean;
            imagePullSecrets?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecImagePullSecrets[];
            metrics?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecMetrics;
            nodeSelector?: {[key: string]: string};
            onExit?: string;
            parallelism?: number;
            podDisruptionBudget?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecPodDisruptionBudget;
            podGC?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecPodGC;
            podPriority?: number;
            podPriorityClassName?: string;
            podSpecPatch?: string;
            priority?: number;
            schedulerName?: string;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecSecurityContext;
            serviceAccountName?: string;
            shutdown?: string;
            suspend?: boolean;
            synchronization?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecSynchronization;
            templates?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplates[];
            tolerations?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTolerations[];
            ttlSecondsAfterFinished?: number;
            ttlStrategy?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTtlStrategy;
            volumeClaimTemplates?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplates[];
            volumes?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumes[];
            workflowMetadata?: {[key: string]: any};
            workflowTemplateRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecWorkflowTemplateRef;
        }

        export interface WorkflowTemplateSpecAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAntiAffinity;
        }

        export interface WorkflowTemplateSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsParameters[];
        }

        export interface WorkflowTemplateSpecArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecArgumentsParametersValueFrom;
        }

        export interface WorkflowTemplateSpecArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowTemplateSpecArtifactRepositoryRef {
            configMap?: string;
            key?: string;
        }

        export interface WorkflowTemplateSpecDnsConfig {
            nameservers?: string[];
            options?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecDnsConfigOptions[];
            searches?: string[];
        }

        export interface WorkflowTemplateSpecDnsConfigOptions {
            name?: string;
            value?: string;
        }

        export interface WorkflowTemplateSpecExecutor {
            serviceAccountName?: string;
        }

        export interface WorkflowTemplateSpecHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface WorkflowTemplateSpecImagePullSecrets {
            name?: string;
        }

        export interface WorkflowTemplateSpecMetrics {
            prometheus: outputs.argoproj.v1alpha1.WorkflowTemplateSpecMetricsPrometheus[];
        }

        export interface WorkflowTemplateSpecMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface WorkflowTemplateSpecMetricsPrometheusCounter {
            value: string;
        }

        export interface WorkflowTemplateSpecMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface WorkflowTemplateSpecMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface WorkflowTemplateSpecMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface WorkflowTemplateSpecPodDisruptionBudget {
            maxUnavailable?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecPodDisruptionBudgetMaxUnavailable;
            minAvailable?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecPodDisruptionBudgetMinAvailable;
            selector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecPodDisruptionBudgetSelector;
        }

        export interface WorkflowTemplateSpecPodDisruptionBudgetMaxUnavailable {
        }

        export interface WorkflowTemplateSpecPodDisruptionBudgetMinAvailable {
        }

        export interface WorkflowTemplateSpecPodDisruptionBudgetSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecPodGC {
            strategy?: string;
        }

        export interface WorkflowTemplateSpecSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecSecurityContextWindowsOptions;
        }

        export interface WorkflowTemplateSpecSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowTemplateSpecSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowTemplateSpecSynchronization {
            mutex?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecSynchronizationSemaphore;
        }

        export interface WorkflowTemplateSpecSynchronizationMutex {
            name?: string;
        }

        export interface WorkflowTemplateSpecSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface WorkflowTemplateSpecSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplates {
            activeDeadlineSeconds?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesActiveDeadlineSeconds;
            affinity?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinity;
            archiveLocation?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocation;
            arguments?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArguments;
            automountServiceAccountToken?: boolean;
            container?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainer;
            daemon?: boolean;
            dag?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDag;
            executor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesExecutor;
            hostAliases?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesHostAliases[];
            initContainers?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainers[];
            inputs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputs;
            memoize?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMemoize;
            metadata?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMetadata;
            metrics?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMetrics;
            name: string;
            nodeSelector?: {[key: string]: string};
            outputs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputs;
            parallelism?: number;
            podSpecPatch?: string;
            priority?: number;
            priorityClassName?: string;
            resource?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesResource;
            resubmitPendingPods?: boolean;
            retryStrategy?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesRetryStrategy;
            schedulerName?: string;
            script?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScript;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSecurityContext;
            serviceAccountName?: string;
            sidecars?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecars[];
            steps?: any[][];
            suspend?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSuspend;
            synchronization?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSynchronization;
            template?: string;
            templateRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesTemplateRef;
            timeout?: string;
            tolerations?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesTolerations[];
            volumes?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumes[];
        }

        export interface WorkflowTemplateSpecTemplatesActiveDeadlineSeconds {
        }

        export interface WorkflowTemplateSpecTemplatesAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAntiAffinity;
        }

        export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocation {
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationArtifactory;
            gcs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationGit;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationHttp;
            oss?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationOss;
            raw?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationS3;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationHttp {
            url: string;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationRaw {
            data: string;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsParameters[];
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom;
        }

        export interface WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowTemplateSpecTemplatesContainer {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnvFrom[];
            image: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLivenessProbe;
            name?: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnvValueFrom;
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnvFromSecretRef;
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef;
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePreStop;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerResourcesRequests};
        }

        export interface WorkflowTemplateSpecTemplatesContainerResourcesLimits {
        }

        export interface WorkflowTemplateSpecTemplatesContainerResourcesRequests {
        }

        export interface WorkflowTemplateSpecTemplatesContainerSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions;
        }

        export interface WorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesContainerStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesContainerStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerStartupProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesContainerStartupProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesContainerVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowTemplateSpecTemplatesContainerVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowTemplateSpecTemplatesDag {
            failFast?: boolean;
            target?: string;
            tasks: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasks[];
        }

        export interface WorkflowTemplateSpecTemplatesDagTasks {
            arguments?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArguments;
            continueOn?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksContinueOn;
            dependencies?: string[];
            depends?: string;
            name: string;
            onExit?: string;
            template: string;
            templateRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksTemplateRef;
            when?: string;
            withItems?: {[key: string]: any}[];
            withParam?: string;
            withSequence?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksWithSequence;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArguments {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters[];
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp {
            url: string;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw {
            data: string;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksContinueOn {
            error?: boolean;
            failed?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksWithSequence {
            count?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksWithSequenceCount;
            end?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksWithSequenceEnd;
            format?: string;
            start?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesDagTasksWithSequenceStart;
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksWithSequenceCount {
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksWithSequenceEnd {
        }

        export interface WorkflowTemplateSpecTemplatesDagTasksWithSequenceStart {
        }

        export interface WorkflowTemplateSpecTemplatesExecutor {
            serviceAccountName?: string;
        }

        export interface WorkflowTemplateSpecTemplatesHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainers {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnvValueFrom;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersResourcesRequests};
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersResourcesLimits {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersResourcesRequests {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowTemplateSpecTemplatesInitContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifacts[];
            parameters?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsParameters[];
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesInputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesInputsParametersValueFrom;
        }

        export interface WorkflowTemplateSpecTemplatesInputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowTemplateSpecTemplatesMemoize {
            cache: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMemoizeCache;
            key: string;
        }

        export interface WorkflowTemplateSpecTemplatesMemoizeCache {
            configMap: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMemoizeCacheConfigMap;
        }

        export interface WorkflowTemplateSpecTemplatesMemoizeCacheConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecTemplatesMetrics {
            prometheus: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMetricsPrometheus[];
        }

        export interface WorkflowTemplateSpecTemplatesMetricsPrometheus {
            counter?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMetricsPrometheusCounter;
            gauge?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMetricsPrometheusGauge;
            help: string;
            histogram?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMetricsPrometheusHistogram;
            labels?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesMetricsPrometheusLabels[];
            name: string;
            when?: string;
        }

        export interface WorkflowTemplateSpecTemplatesMetricsPrometheusCounter {
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesMetricsPrometheusGauge {
            realtime: boolean;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesMetricsPrometheusHistogram {
            buckets: number[];
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesMetricsPrometheusLabels {
            key: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesOutputs {
            artifacts?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifacts[];
            exitCode?: string;
            parameters?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsParameters[];
            result?: string;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifacts {
            archive?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsArchive;
            archiveLogs?: boolean;
            artifactory?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory;
            from?: string;
            gcs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsGcs;
            git?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsGit;
            globalName?: string;
            hdfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs;
            http?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsHttp;
            mode?: number;
            name: string;
            optional?: boolean;
            oss?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsOss;
            path?: string;
            raw?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsRaw;
            s3?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsS3;
            subPath?: string;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArchive {
            none?: {[key: string]: any};
            tar?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar {
            compressionLevel?: number;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory {
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;
            url: string;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGcs {
            bucket: string;
            key: string;
            serviceAccountKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGit {
            depth?: number;
            fetch?: string[];
            insecureIgnoreHostKey?: boolean;
            passwordSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret;
            repo: string;
            revision?: string;
            sshPrivateKeySecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;
            usernameSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs {
            addresses: string[];
            force?: boolean;
            hdfsUser?: string;
            krbCCacheSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;
            krbConfigConfigMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;
            krbKeytabSecret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;
            krbRealm?: string;
            krbServicePrincipalName?: string;
            krbUsername?: string;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHttp {
            url: string;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsOss {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret;
            bucket: string;
            endpoint: string;
            key: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsRaw {
            data: string;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsS3 {
            accessKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret;
            bucket: string;
            endpoint: string;
            insecure?: boolean;
            key: string;
            region?: string;
            roleARN?: string;
            secretKeySecret: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret;
            useSDKCreds?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsParameters {
            default?: string;
            globalName?: string;
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesOutputsParametersValueFrom;
        }

        export interface WorkflowTemplateSpecTemplatesOutputsParametersValueFrom {
            default?: string;
            event?: string;
            jqFilter?: string;
            jsonPath?: string;
            parameter?: string;
            path?: string;
            supplied?: {[key: string]: any};
        }

        export interface WorkflowTemplateSpecTemplatesResource {
            action: string;
            failureCondition?: string;
            flags?: string[];
            manifest?: string;
            mergeStrategy?: string;
            setOwnerReference?: boolean;
            successCondition?: string;
        }

        export interface WorkflowTemplateSpecTemplatesRetryStrategy {
            backoff?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesRetryStrategyBackoff;
            limit?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesRetryStrategyLimit;
            retryPolicy?: string;
        }

        export interface WorkflowTemplateSpecTemplatesRetryStrategyBackoff {
            duration?: string;
            factor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesRetryStrategyBackoffFactor;
            maxDuration?: string;
        }

        export interface WorkflowTemplateSpecTemplatesRetryStrategyBackoffFactor {
        }

        export interface WorkflowTemplateSpecTemplatesRetryStrategyLimit {
        }

        export interface WorkflowTemplateSpecTemplatesScript {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnvFrom[];
            image: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLivenessProbe;
            name?: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptSecurityContext;
            source: string;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnvValueFrom;
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnvFromSecretRef;
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef;
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePreStop;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptResourcesRequests};
        }

        export interface WorkflowTemplateSpecTemplatesScriptResourcesLimits {
        }

        export interface WorkflowTemplateSpecTemplatesScriptResourcesRequests {
        }

        export interface WorkflowTemplateSpecTemplatesScriptSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions;
        }

        export interface WorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesScriptStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesScriptVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowTemplateSpecTemplatesScriptVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSecurityContextWindowsOptions;
        }

        export interface WorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecars {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnv[];
            envFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLivenessProbe;
            mirrorVolumeMounts?: boolean;
            name: string;
            ports?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsReadinessProbe;
            resources?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsResources;
            securityContext?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsVolumeMounts[];
            workingDir?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnvValueFrom;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRefDivisor {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecycle {
            postStart?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsResourcesRequests};
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsResourcesLimits {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsResourcesRequests {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbe {
            exec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeExec {
            command?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocketPort;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocketPort {
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface WorkflowTemplateSpecTemplatesSidecarsVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSuspend {
            duration?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSynchronization {
            mutex?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSynchronizationMutex;
            semaphore?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSynchronizationSemaphore;
        }

        export interface WorkflowTemplateSpecTemplatesSynchronizationMutex {
            name?: string;
        }

        export interface WorkflowTemplateSpecTemplatesSynchronizationSemaphore {
            configMapKeyRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef;
        }

        export interface WorkflowTemplateSpecTemplatesSynchronizationSemaphoreConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesTemplateRef {
            clusterScope?: boolean;
            name?: string;
            runtimeResolution?: boolean;
            template?: string;
        }

        export interface WorkflowTemplateSpecTemplatesTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesVsphereVolume;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesCephfsSecretRef;
            user?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesCephfsSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesCinderSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesDownwardAPIItems[];
        }

        export interface WorkflowTemplateSpecTemplatesVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowTemplateSpecTemplatesVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesEmptyDirSizeLimit;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesEmptyDirSizeLimit {
        }

        export interface WorkflowTemplateSpecTemplatesVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface WorkflowTemplateSpecTemplatesVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesIscsiSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSources[];
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesRbdSecretRef;
            user?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesRbdSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecTemplatesVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesStorageosSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecTemplatesVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface WorkflowTemplateSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface WorkflowTemplateSpecTtlStrategy {
            secondsAfterCompletion?: number;
            secondsAfterFailure?: number;
            secondsAfterSuccess?: number;
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplates {
            apiVersion?: string;
            kind?: string;
            metadata?: {[key: string]: any};
            spec?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesSpec;
            status?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesStatus;
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesSpec {
            accessModes?: string[];
            dataSource?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource;
            resources?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesSpecResources;
            selector?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesSpecSelector;
            storageClassName?: string;
            volumeMode?: string;
            volumeName?: string;
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource {
            apiGroup?: string;
            kind: string;
            name: string;
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecResources {
            limits?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesLimits};
            requests?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesRequests};
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesLimits {
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecResourcesRequests {
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesStatus {
            accessModes?: string[];
            capacity?: {[key: string]: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesStatusCapacity};
            conditions?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions[];
            phase?: string;
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesStatusCapacity {
        }

        export interface WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions {
            lastProbeTime?: string;
            lastTransitionTime?: string;
            message?: string;
            reason?: string;
            status: string;
            type: string;
        }

        export interface WorkflowTemplateSpecVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesCinder;
            configMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesConfigMap;
            csi?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesCsi;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesDownwardAPI;
            emptyDir?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesScaleIO;
            secret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesSecret;
            storageos?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesVsphereVolume;
        }

        export interface WorkflowTemplateSpecVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowTemplateSpecVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface WorkflowTemplateSpecVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface WorkflowTemplateSpecVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesCephfsSecretRef;
            user?: string;
        }

        export interface WorkflowTemplateSpecVolumesCephfsSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface WorkflowTemplateSpecVolumesCinderSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface WorkflowTemplateSpecVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesDownwardAPIItems[];
        }

        export interface WorkflowTemplateSpecVolumesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowTemplateSpecVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowTemplateSpecVolumesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowTemplateSpecVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesEmptyDirSizeLimit;
        }

        export interface WorkflowTemplateSpecVolumesEmptyDirSizeLimit {
        }

        export interface WorkflowTemplateSpecVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface WorkflowTemplateSpecVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesFlexVolumeSecretRef;
        }

        export interface WorkflowTemplateSpecVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface WorkflowTemplateSpecVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface WorkflowTemplateSpecVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface WorkflowTemplateSpecVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface WorkflowTemplateSpecVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface WorkflowTemplateSpecVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface WorkflowTemplateSpecVolumesIscsiSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface WorkflowTemplateSpecVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface WorkflowTemplateSpecVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface WorkflowTemplateSpecVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface WorkflowTemplateSpecVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSources[];
        }

        export interface WorkflowTemplateSpecVolumesProjectedSources {
            configMap?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken;
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesConfigMap {
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPI {
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor;
            resource: string;
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesSecret {
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface WorkflowTemplateSpecVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesRbdSecretRef;
            user?: string;
        }

        export interface WorkflowTemplateSpecVolumesRbdSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface WorkflowTemplateSpecVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecVolumesSecret {
            defaultMode?: number;
            items?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface WorkflowTemplateSpecVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface WorkflowTemplateSpecVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.WorkflowTemplateSpecVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface WorkflowTemplateSpecVolumesStorageosSecretRef {
            name?: string;
        }

        export interface WorkflowTemplateSpecVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface WorkflowTemplateSpecWorkflowTemplateRef {
            clusterScope?: boolean;
            name?: string;
        }
    }
}
